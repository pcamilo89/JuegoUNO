/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import controller.MainViewController;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import javax.swing.JTextField;

/**
 * Clase de la ventana inicial de la aplicacion
 * @author Camilo
 */
public class MainView extends MyFrame {

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        MainViewController.load(this);
    }

    public JTextField getjTFSleep() {
        return jTFSleep;
    }

    public void setjTFSleep(JTextField jTFSleep) {
        this.jTFSleep = jTFSleep;
    }

    public JTextField getjTFSpeed() {
        return jTFSpeed;
    }

    public void setjTFSpeed(JTextField jTFSpeed) {
        this.jTFSpeed = jTFSpeed;
    }
    
    public JLabel getjLTurn() {
        return jLTurn;
    }

    public void setjLTurn(JLabel jLTurn) {
        this.jLTurn = jLTurn;
    }

    public JLabel getjLPlayer() {
        return jLPlayer;
    }

    public void setjLPlayer(JLabel jLPlayer) {
        this.jLPlayer = jLPlayer;
    }

    public JLabel getjLCards() {
        return jLCards;
    }

    public void setjLCards(JLabel jLCards) {
        this.jLCards = jLCards;
    }

    public JTextField getjTFPort() {
        return jTFPort;
    }

    public void setjTFPort(JTextField jTFPort) {
        this.jTFPort = jTFPort;
    }

    public JButton getjBGameStart() {
        return jBGameStart;
    }

    public void setjBGameStart(JButton jBGameStart) {
        this.jBGameStart = jBGameStart;
    }

    public JButton getjBPortStart() {
        return jBPortStart;
    }

    public void setjBPortStart(JButton jBPortStart) {
        this.jBPortStart = jBPortStart;
    }

    public JButton getjBPortStop() {
        return jBPortStop;
    }

    public void setjBPortStop(JButton jBPortStop) {
        this.jBPortStop = jBPortStop;
    }

    public JLabel getjLInfo() {
        return jLInfo;
    }

    public void setjLInfo(JLabel jLInfo) {
        this.jLInfo = jLInfo;
    }

    public JProgressBar getjPBCardCounter() {
        return jPBCardCounter;
    }

    public void setjPBCardCounter(JProgressBar jPBCardCounter) {
        this.jPBCardCounter = jPBCardCounter;
    }

    public JCheckBox getjCBSound() {
        return jCBSound;
    }

    public void setjCBSound(JCheckBox jCBSound) {
        this.jCBSound = jCBSound;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPCentral = new javax.swing.JPanel();
        jPComConfig = new javax.swing.JPanel();
        jLPuerto = new javax.swing.JLabel();
        jTFPort = new javax.swing.JTextField();
        jLSpeed = new javax.swing.JLabel();
        jTFSpeed = new javax.swing.JTextField();
        jLSleep = new javax.swing.JLabel();
        jTFSleep = new javax.swing.JTextField();
        jBPortStart = new javax.swing.JButton();
        jBPortStop = new javax.swing.JButton();
        jPPlayerInfo = new javax.swing.JPanel();
        jLPlayer = new javax.swing.JLabel();
        jLTurn = new javax.swing.JLabel();
        jPGameInfo = new javax.swing.JPanel();
        jLCards = new javax.swing.JLabel();
        jLInfo = new javax.swing.JLabel();
        jPBCardCounter = new javax.swing.JProgressBar();
        jPOptions = new javax.swing.JPanel();
        jCBSound = new javax.swing.JCheckBox();
        jPBottom = new javax.swing.JPanel();
        jBGameStart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPCentral.setPreferredSize(new java.awt.Dimension(320, 280));

        jPComConfig.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPComConfig.setLayout(new java.awt.GridBagLayout());

        jLPuerto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLPuerto.setText("Puerto:");
        jLPuerto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jLPuerto, gridBagConstraints);

        jTFPort.setPreferredSize(new java.awt.Dimension(60, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jTFPort, gridBagConstraints);

        jLSpeed.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLSpeed.setText("Velocidad:");
        jLSpeed.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jLSpeed, gridBagConstraints);

        jTFSpeed.setPreferredSize(new java.awt.Dimension(60, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jTFSpeed, gridBagConstraints);

        jLSleep.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLSleep.setText("Sleep:");
        jLSleep.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jLSleep, gridBagConstraints);

        jTFSleep.setPreferredSize(new java.awt.Dimension(60, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jTFSleep, gridBagConstraints);

        jBPortStart.setText("Start");
        jBPortStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPortStartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jBPortStart, gridBagConstraints);

        jBPortStop.setText("Stop");
        jBPortStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPortStopActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPComConfig.add(jBPortStop, gridBagConstraints);

        jPPlayerInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPPlayerInfo.setLayout(new java.awt.GridLayout(2, 0));

        jLPlayer.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        jLPlayer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLPlayer.setPreferredSize(new java.awt.Dimension(100, 25));
        jPPlayerInfo.add(jLPlayer);

        jLTurn.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jLTurn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTurn.setPreferredSize(new java.awt.Dimension(100, 25));
        jPPlayerInfo.add(jLTurn);

        jPGameInfo.setPreferredSize(new java.awt.Dimension(244, 50));
        jPGameInfo.setLayout(new java.awt.GridLayout(0, 1));

        jLCards.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jLCards.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLCards.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLCards.setPreferredSize(new java.awt.Dimension(300, 30));
        jPGameInfo.add(jLCards);

        jLInfo.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLInfo.setPreferredSize(new java.awt.Dimension(200, 30));
        jPGameInfo.add(jLInfo);
        jPGameInfo.add(jPBCardCounter);

        jPOptions.setLayout(new java.awt.GridLayout(0, 1));

        jCBSound.setSelected(true);
        jCBSound.setText("Sound");
        jPOptions.add(jCBSound);

        javax.swing.GroupLayout jPCentralLayout = new javax.swing.GroupLayout(jPCentral);
        jPCentral.setLayout(jPCentralLayout);
        jPCentralLayout.setHorizontalGroup(
            jPCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPGameInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPCentralLayout.createSequentialGroup()
                        .addGroup(jPCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPComConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 67, Short.MAX_VALUE)
                        .addComponent(jPPlayerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPCentralLayout.setVerticalGroup(
            jPCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPPlayerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPComConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPGameInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPCentral, java.awt.BorderLayout.CENTER);

        jPBottom.setBackground(new java.awt.Color(204, 204, 204));

        jBGameStart.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jBGameStart.setText("START GAME");
        jBGameStart.setPreferredSize(new java.awt.Dimension(150, 35));
        jBGameStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGameStartActionPerformed(evt);
            }
        });
        jPBottom.add(jBGameStart);

        getContentPane().add(jPBottom, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBPortStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPortStartActionPerformed
        MainViewController.startComm();
    }//GEN-LAST:event_jBPortStartActionPerformed

    private void jBPortStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPortStopActionPerformed
        MainViewController.stopComm();
    }//GEN-LAST:event_jBPortStopActionPerformed

    private void jBGameStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGameStartActionPerformed
        MainViewController.startGame();
    }//GEN-LAST:event_jBGameStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGameStart;
    private javax.swing.JButton jBPortStart;
    private javax.swing.JButton jBPortStop;
    private javax.swing.JCheckBox jCBSound;
    private javax.swing.JLabel jLCards;
    private javax.swing.JLabel jLInfo;
    private javax.swing.JLabel jLPlayer;
    private javax.swing.JLabel jLPuerto;
    private javax.swing.JLabel jLSleep;
    private javax.swing.JLabel jLSpeed;
    private javax.swing.JLabel jLTurn;
    private javax.swing.JProgressBar jPBCardCounter;
    private javax.swing.JPanel jPBottom;
    private javax.swing.JPanel jPCentral;
    private javax.swing.JPanel jPComConfig;
    private javax.swing.JPanel jPGameInfo;
    private javax.swing.JPanel jPOptions;
    private javax.swing.JPanel jPPlayerInfo;
    private javax.swing.JTextField jTFPort;
    private javax.swing.JTextField jTFSleep;
    private javax.swing.JTextField jTFSpeed;
    // End of variables declaration//GEN-END:variables
}
